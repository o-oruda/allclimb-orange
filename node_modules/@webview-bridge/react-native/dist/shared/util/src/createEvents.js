"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createResolver = exports.createEvents = void 0;
const createEvents = () => ({
    events: {},
    emit(event, ...args) {
        const callbacks = this.events[event] || [];
        for (let i = 0, length = callbacks.length; i < length; i++) {
            callbacks[i](...args);
        }
    },
    on(event, cb) {
        this.events[event]?.push(cb) || (this.events[event] = [cb]);
        return () => {
            this.events[event] = this.events[event]?.filter((i) => cb !== i);
        };
    },
});
exports.createEvents = createEvents;
const createResolver = ({ emitter, evaluate, eventId, failHandler = false, methodName, onFallback, }) => {
    return new Promise((resolve, reject) => {
        const unbind = emitter.on(`${methodName}-${eventId}`, (data, throwOccurred) => {
            unbind();
            if (throwOccurred) {
                if (failHandler instanceof Error) {
                    onFallback?.();
                    reject(failHandler);
                }
                else {
                    resolve(void 0);
                }
            }
            else {
                resolve(data);
            }
        });
        evaluate();
    });
};
exports.createResolver = createResolver;
